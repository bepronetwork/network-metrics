$spacers: ('p': 'padding', 'm': 'margin') !default;
$positions: absolute, relative, sticky !default;
$directions: ('left': 'l', 'right': 'r', 'top': 't', 'bottom': 'b') !default;
$dimensions: ('0': 0, '1': .25, '2': .5, '3': 1, '4': 2, '5': 3) !default;

// .m|p[t|r|l|b|x|y]-[0...5]
@each $d, $prop in $spacers {
  .#{$d} {
    @each $dir, $values in (x: (right, left), y: (top, bottom)) {
      &#{$dir} {
        @each $amount, $multiplier in $dimensions {
          &-#{$amount} {
            @each $value in $values {
              #{$prop}-#{$value}: #{$multiplier}rem!important;
            }
          }
          &n-#{$amount} {
            @each $value in $values {
              #{$prop}-#{$value}: -#{$multiplier}rem!important;
            }
          }

        }
        &-auto {
          @each $value in $values {
            #{$prop}-#{$value}: auto!important;
          }
        }
      }
    }

    @each $dir, $alias in $directions {
      &#{$alias} {
        @each $amount, $multiplier in $dimensions {
          &-#{$amount} { #{$prop}-#{$dir}: #{$multiplier}rem!important; }
          &n-#{$amount} { #{$prop}-#{$dir}: -#{$multiplier}rem!important; }
          &-auto { #{$prop}-#{$dir}: auto!important; }
        }
      }
    }

    @each $amount, $multiplier in $dimensions {
      &-#{$amount} {
        #{$prop}: #{$multiplier}rem !important;
      }
      &n-#{$amount} {
        #{$prop}: -#{$multiplier}rem !important;
      }
    }
  }
}

// .position-[absolute|relative] .bottom|.left|.right|.top-[0...5]
@each $position in $positions {
  .position-#{$position} {
    position: $position;
    @each $direction, $alias in $directions {
      &.#{$direction} {
        @each $amount, $multiplier in $dimensions {
          &-#{$amount} { #{$direction}: #{$multiplier}rem }
          &n-#{$amount} { #{$direction}: -#{$multiplier}rem }
        }
      }
    }
  }
}

.d {
  @each $display in (flex, block, inline, inline-block, inline-flex) {
    &-#{$display} { display: $display!important; }
  }

  &-flex {
    .no-grow {
      flex-grow: 0;
    }
  }
}

.justify-content {
  @each $alias, $justify in ('center': center, 'between': space-between, 'around': space-around, 'start': flex-start, 'end': flex-end) {
    &-#{$alias} { justify-content: $justify!important; }
  }
}

.align-items {
  @each $alias, $align in (center: center, end: end, stretch: stretch, start: start) {
    &-#{$alias} {align-items: $align}
  }
}

.align-self {
  @each $alias, $align in (center: center, end: end, stretch: stretch, start: start) {
    &-#{$alias} {align-self: $align}
  }
}
